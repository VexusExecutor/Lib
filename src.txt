-- Vexus UI Library v2.4
-- Complete Professional Edition

local Vexus = {}

-- Services
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")

-- Configuration
Vexus.Configuration = {
    SavePosition = true,
    SnapToEdges = true,
    MinimizeHotkey = Enum.KeyCode.RightControl
}

-- Enhanced Dark Blue Theme
Vexus.Theme = {
    Default = {
        TextFont = "Gotham",
        TextColor = Color3.fromRGB(220, 220, 220),
        Background = Color3.fromRGB(12, 18, 33),
        Topbar = Color3.fromRGB(18, 27, 45),
        CloseButton = Color3.fromRGB(200, 60, 60),
        CloseButtonHover = Color3.fromRGB(220, 80, 80),
        NotificationBackground = Color3.fromRGB(20, 30, 50)
    }
}

function Vexus:CreateWindow(settings)
    settings = settings or {}
    local config = setmetatable(settings.Configuration or {}, {__index = Vexus.Configuration})
    local theme = setmetatable(settings.Theme or {}, {__index = Vexus.Theme.Default})

    -- Create UI
    local VexusUI = Instance.new("ScreenGui")
    VexusUI.Name = "VexusUI"
    VexusUI.ResetOnSpawn = false
    VexusUI.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    
    -- CoreGui handling
    if gethui then
        VexusUI.Parent = gethui()
    elseif syn and syn.protect_gui then
        syn.protect_gui(VexusUI)
        VexusUI.Parent = CoreGui
    else
        VexusUI.Parent = CoreGui
    end

    -- Main Window
    local Main = Instance.new("Frame")
    Main.Name = "Main"
    Main.Size = UDim2.new(0, 500, 0, 450)
    Main.Position = UDim2.new(0.5, 0, 0.5, 0)
    Main.AnchorPoint = Vector2.new(0.5, 0.5)
    Main.BackgroundColor3 = theme.Background
    Main.Visible = false
    Main.Parent = VexusUI

    -- Window Styling
    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0, 8)
    UICorner.Parent = Main

    local UIStroke = Instance.new("UIStroke")
    UIStroke.Thickness = 1
    UIStroke.Color = Color3.fromRGB(45, 65, 100)
    UIStroke.Parent = Main

    -- Topbar with close button
    local Topbar = Instance.new("Frame")
    Topbar.Name = "Topbar"
    Topbar.Size = UDim2.new(1, 0, 0, 40)
    Topbar.BackgroundColor3 = theme.Topbar
    Topbar.Parent = Main

    -- Close Button (X)
    local CloseButton = Instance.new("TextButton")
    CloseButton.Name = "CloseButton"
    CloseButton.Text = "X"
    CloseButton.Font = Enum.Font.GothamBold
    CloseButton.TextSize = 16
    CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    CloseButton.BackgroundColor3 = theme.CloseButton
    CloseButton.Size = UDim2.new(0, 30, 0, 30)
    CloseButton.Position = UDim2.new(1, -35, 0.5, 0)
    CloseButton.AnchorPoint = Vector2.new(1, 0.5)
    CloseButton.Parent = Topbar

    -- Close Button Styling
    local CloseCorner = Instance.new("UICorner")
    CloseCorner.CornerRadius = UDim.new(0, 6)
    CloseCorner.Parent = CloseButton

    -- Close Button Hover Effects
    CloseButton.MouseEnter:Connect(function()
        TweenService:Create(CloseButton, TweenInfo.new(0.2), {
            BackgroundColor3 = theme.CloseButtonHover
        }):Play()
    end)

    CloseButton.MouseLeave:Connect(function()
        TweenService:Create(CloseButton, TweenInfo.new(0.2), {
            BackgroundColor3 = theme.CloseButton
        }):Play()
    end)

    -- Close Confirmation Dialog
    local function showCloseConfirmation()
        local Notification = Instance.new("Frame")
        Notification.Name = "CloseConfirmation"
        Notification.Size = UDim2.new(0, 300, 0, 120)
        Notification.Position = UDim2.new(0.5, 0, 0.5, 0)
        Notification.AnchorPoint = Vector2.new(0.5, 0.5)
        Notification.BackgroundColor3 = theme.NotificationBackground
        Notification.Parent = Main

        local NotificationCorner = Instance.new("UICorner")
        NotificationCorner.CornerRadius = UDim.new(0, 8)
        NotificationCorner.Parent = Notification

        local Message = Instance.new("TextLabel")
        Message.Text = "Would you like to unload the UI?"
        Message.Font = Enum.Font.Gotham
        Message.TextSize = 14
        Message.TextColor3 = theme.TextColor
        Message.BackgroundTransparency = 1
        Message.Size = UDim2.new(1, -20, 0.5, 0)
        Message.Position = UDim2.new(0, 10, 0, 10)
        Message.Parent = Notification

        local ButtonContainer = Instance.new("Frame")
        ButtonContainer.BackgroundTransparency = 1
        ButtonContainer.Size = UDim2.new(1, -20, 0, 40)
        ButtonContainer.Position = UDim2.new(0, 10, 1, -50)
        ButtonContainer.Parent = Notification

        local YesButton = Instance.new("TextButton")
        YesButton.Text = "Yes"
        YesButton.Size = UDim2.new(0.4, 0, 1, 0)
        YesButton.Position = UDim2.new(0, 0, 0, 0)
        YesButton.Parent = ButtonContainer

        local NoButton = Instance.new("TextButton")
        NoButton.Text = "No"
        NoButton.Size = UDim2.new(0.4, 0, 1, 0)
        NoButton.Position = UDim2.new(0.6, 0, 0, 0)
        NoButton.Parent = ButtonContainer

        -- Style buttons
        for _, btn in pairs({YesButton, NoButton}) do
            btn.Font = Enum.Font.GothamSemibold
            btn.TextSize = 14
            btn.TextColor3 = Color3.fromRGB(255, 255, 255)
            btn.BackgroundColor3 = Color3.fromRGB(40, 60, 90)
            
            local btnCorner = Instance.new("UICorner")
            btnCorner.CornerRadius = UDim.new(0, 6)
            btnCorner.Parent = btn
            
            btn.MouseEnter:Connect(function()
                TweenService:Create(btn, TweenInfo.new(0.2), {
                    BackgroundColor3 = Color3.fromRGB(60, 80, 110)
                }):Play()
            end)
            
            btn.MouseLeave:Connect(function()
                TweenService:Create(btn, TweenInfo.new(0.2), {
                    BackgroundColor3 = Color3.fromRGB(40, 60, 90)
                }):Play()
            end)
        end

        YesButton.MouseButton1Click:Connect(function()
            VexusUI:Destroy()
        end)

        NoButton.MouseButton1Click:Connect(function()
            Notification:Destroy()
        end)
    end

    CloseButton.MouseButton1Click:Connect(showCloseConfirmation)

    -- "Made by Vexus" Notification
    local function showBrandingNotification()
        local BrandNotification = Instance.new("Frame")
        BrandNotification.Name = "BrandNotification"
        BrandNotification.Size = UDim2.new(0, 200, 0, 40)
        BrandNotification.Position = UDim2.new(0, 10, 1, -50)
        BrandNotification.AnchorPoint = Vector2.new(0, 1)
        BrandNotification.BackgroundColor3 = theme.NotificationBackground
        BrandNotification.Parent = VexusUI

        local BrandCorner = Instance.new("UICorner")
        BrandCorner.CornerRadius = UDim.new(0, 6)
        BrandCorner.Parent = BrandNotification

        local BrandLabel = Instance.new("TextLabel")
        BrandLabel.Text = "Made by Vexus"
        BrandLabel.Font = Enum.Font.GothamSemibold
        BrandLabel.TextSize = 14
        BrandLabel.TextColor3 = theme.TextColor
        BrandLabel.BackgroundTransparency = 1
        BrandLabel.Size = UDim2.new(1, 0, 1, 0)
        BrandLabel.Parent = BrandNotification

        -- Auto-fade after 5 seconds
        delay(5, function()
            TweenService:Create(BrandNotification, TweenInfo.new(1), {
                BackgroundTransparency = 1
            }):Play()
            TweenService:Create(BrandLabel, TweenInfo.new(1), {
                TextTransparency = 1
            }):Play()
            wait(1)
            BrandNotification:Destroy()
        end)
    end

    -- Initialize window
    Main.Visible = true
    showBrandingNotification()

    -- Return window functions
    local Window = {}
    -- [Include your other window functions here]
    
    return Window
end

return Vexus
