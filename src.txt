-- Vexus UI Library v2.0
-- Dark Blue Pixel-Perfect Edition
-- Designed for executors with loadstring compatibility

local Vexus = {}

-- Enhanced Theme Configuration
Vexus.Theme = {
    Default = {
        TextFont = "Gotham",
        TextColor = Color3.fromRGB(220, 220, 220),
        
        -- Deep space blue color scheme
        Background = Color3.fromRGB(12, 18, 33),
        Topbar = Color3.fromRGB(18, 27, 45),
        Shadow = Color3.fromRGB(8, 12, 22),
        
        -- Element styling
        ElementBackground = Color3.fromRGB(22, 33, 55),
        ElementBackgroundHover = Color3.fromRGB(32, 48, 80),
        ElementStroke = Color3.fromRGB(45, 65, 100),
        
        -- Tab system
        TabBackground = Color3.fromRGB(25, 40, 65),
        TabBackgroundSelected = Color3.fromRGB(40, 65, 110),
        TabTextColor = Color3.fromRGB(230, 230, 230),
        
        -- Toggle switches
        ToggleEnabled = Color3.fromRGB(0, 170, 255),
        ToggleDisabled = Color3.fromRGB(80, 80, 80),
        
        -- Sliders
        SliderBackground = Color3.fromRGB(30, 45, 70),
        SliderProgress = Color3.fromRGB(0, 150, 255),
        
        -- Notifications
        NotificationBackground = Color3.fromRGB(20, 30, 50),
        NotificationActionsBackground = Color3.fromRGB(40, 60, 90)
    }
}

-- Services
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local CoreGui = game:GetService("CoreGui")

-- UI Creation Functions
function Vexus:CreateWindow(settings)
    settings = settings or {}
    
    -- Create main UI container
    local VexusUI = Instance.new("ScreenGui")
    VexusUI.Name = "VexusUI"
    VexusUI.ResetOnSpawn = false
    VexusUI.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    VexusUI.DisplayOrder = 999
    
    -- Apply to CoreGui
    if gethui then
        VexusUI.Parent = gethui()
    elseif syn and syn.protect_gui then
        syn.protect_gui(VexusUI)
        VexusUI.Parent = CoreGui
    else
        VexusUI.Parent = CoreGui
    end

    -- Main window frame
    local Main = Instance.new("Frame")
    Main.Name = "Main"
    Main.Size = UDim2.new(0, 500, 0, 450)
    Main.Position = UDim2.new(0.5, 0, 0.5, 0)
    Main.AnchorPoint = Vector2.new(0.5, 0.5)
    Main.BackgroundColor3 = Vexus.Theme.Default.Background
    Main.ClipsDescendants = true
    Main.Visible = false
    Main.Parent = VexusUI

    -- Smooth rounded corners
    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0, 8)
    UICorner.Parent = Main

    -- Subtle border
    local UIStroke = Instance.new("UIStroke")
    UIStroke.Thickness = 1
    UIStroke.Color = Vexus.Theme.Default.ElementStroke
    UIStroke.Parent = Main

    -- Topbar with enhanced styling
    local Topbar = Instance.new("Frame")
    Topbar.Name = "Topbar"
    Topbar.Size = UDim2.new(1, 0, 0, 40)
    Topbar.BackgroundColor3 = Vexus.Theme.Default.Topbar
    Topbar.Parent = Main

    local TopbarCorner = Instance.new("UICorner")
    TopbarCorner.CornerRadius = UDim.new(0, 8)
    TopbarCorner.Parent = Topbar

    -- Title with smooth text
    local Title = Instance.new("TextLabel")
    Title.Name = "Title"
    Title.Text = settings.Name or "Vexus UI"
    Title.Font = Enum.Font.GothamSemibold
    Title.TextSize = 16
    Title.TextColor3 = Vexus.Theme.Default.TextColor
    Title.BackgroundTransparency = 1
    Title.Size = UDim2.new(0.6, 0, 1, 0)
    Title.Position = UDim2.new(0, 15, 0, 0)
    Title.TextXAlignment = Enum.TextXAlignment.Left
    Title.Parent = Topbar

    -- [Rest of the UI creation code...]
    -- [Include all your tab, button, toggle creation functions here]

    -- Return the window interface
    local Window = {}
    function Window:CreateTab(name)
        -- Tab creation implementation
    end
    
    function Window:Notify(settings)
        -- Notification implementation
    end

    -- Make window visible with smooth animation
    Main.Visible = true
    Main.Size = UDim2.new(0, 0, 0, 0)
    TweenService:Create(Main, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {
        Size = UDim2.new(0, 500, 0, 450)
    }):Play()

    return Window
end

-- Make the library available
return Vexus
